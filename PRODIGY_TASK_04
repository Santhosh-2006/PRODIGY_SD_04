def print_grid(grid):
    for row in grid:
        print(" ".join(str(num) if num != 0 else '.' for num in row))

def is_valid(grid, row, col, num):
    for x in range(9):
        if grid[row][x] == num or grid[x][col] == num:
            return False
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    for i in range(3):
        for j in range(3):
            if grid[start_row + i][start_col + j] == num:
                return False
    return True

def solve_sudoku(grid):
    for row in range(9):
        for col in range(9):
            if grid[row][col] == 0:
                for num in range(1, 10):
                    if is_valid(grid, row, col, num):
                        grid[row][col] = num
                        if solve_sudoku(grid):
                            return True
                        grid[row][col] = 0
                return False
    return True

def get_user_input():
    grid = []
    print("Enter the Sudoku puzzle (0 for empty cells):")
    for i in range(9):
        while True:
            row = input(f"Enter row {i+1} (9 space-separated numbers): ")
            numbers = row.split()
            if len(numbers) == 9 and all(num.isdigit() and 0 <= int(num) <= 9 for num in numbers):
                grid.append([int(num) for num in numbers])
                break
            else:
                print("Invalid input. Please enter exactly 9 space-separated numbers between 0 and 9.")
    return grid
grid = get_user_input()
if solve_sudoku(grid):
    print("Solved Sudoku:")
    print_grid(grid)
else:
    print("No solution exists")
